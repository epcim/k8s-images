sudo: required
language: python
cache: pip
python:
- '3.6'
services:
- docker

env:
  global:
  - LANG="C.UTF-8"
  - LC_ALL="C"
  - PIPENV_SHELL_COMPAT=true PIPENV_COLORBLIND=true PIPENV_NOSPIN=true
  - COMMIT=${TRAVIS_COMMIT::8}
  - secure: pSGFMpfUyPweTqRtpfBhRHVEJHId568aY5ILPmJF8tZ2bSP3A/w2vlpiJ2oszXKLDIqOW7nz11o1/hh++1BHlnnfqTFx7iQQ1UdYLuHmDH7f3Mc5apf4exlbST+Kg98l+kidWIE2PK8YOitYo/9Kd1ECEyFQDwZqd/J9eK/EQO1iyOeKTggawaImoP1haLFzEvVCfucgvQdDkEx4e4JtEL4sM+zL7gvbm9QVBOycVl6jG6OrUDhLwET8hD4+VPhcAOzfFtH/LJc1/EjIXB4Q94NUEjpVelFNKXGtKbMvC8mfbIqXfMzFpiGTRNQdC32gBFrPTtFzJ7cAOdrJ0Hoe50CQEtfZDw2nmnxfbE+S8OrqqUCmdcGFUFqeYutmOFWGelghiqaZQe9b9Q1Lo1A/NJ+o1Ivxkf04uOOfz0RWes53ZQZWJAnxDYhBc8INqzRZQQYwRJmhm24KEW5biJqSBKlcgjrEPpun3y5WVMwXOPYJd9cP0fBDK5jAoPifvTfGefWJ1Nc6RXfpxlGPdZ3S/M8IS8sxuyyFMLvaIjkUnuxfhpIRGa1/FBR41UVR3EDmCNa1OQJyIRJxX/NiegW2Y733x5rs84ClVdgk3/gs5XkvaRQnfeO4Endo/zlTojUNlRI+jbhkkk7fE8Eu2glE142M2bn7u/p1439j20uB6RQ=
  - secure: YxWVB1YuVbD9k+Eh3+iFgKbtqZFYNCzPs0xSv17XYygBKRjcVSBy+udP+oK9A0kdTvJnzvLGg8YYIy5oxdUu9fdpQ/dG7CA+hGmaodzTVSb3FrLD1tZOj4uOdOHLG0FjxttfH3KK7lq4zKBdlhX4vRe+UcBu8En8diJj2O8vFxaDQro5W+DUNO/X3EoHqMZZuQblZH9grrrqfRqc6JoOoAXQZB7t6x7/wucftkqnQ2JeIcEFjz842jCddvDQXb1wvXLFqP4hxswtSzvdj3YcR570h4+ye87p3dnrlm9j1qxm9oBvFuUXVhC+xQmO4U1jpVxvScsihudG46TAvedUAnNd6+UqiC1VMBrMOun+T3yRIbhgPXo65HxBjVMXEbBWJbbBW1/XqiTkvR/PVscCSy8dZnE1wWzxh3bAEj/2mfDqNBGXoQGclnnxAcDoaHQERIc4vuIGMD4uymlWwPaJZsBBPtoFtH3WsqtWLRnULLrk0B39uGlm93NQrZf01MyMbTjk0ldHTFjIoJCz9lfuTQc0JaYb2KGcROIhbHr2rHTOZdIqe9/mMVGAx8w1CG5bqbfn4X87LiT7BDq7wcwgdQ26oFrXuV3NnpWOjB7g521YqOZUVRbz6AFl3jV8QHNmKHOvvxRPi9iNrwznaEvFRH+6kFxxhZSHJy7zAxtHvCQ=

script:
- "/bin/true"

stages:
- name: test
- name: build
  if: "( branch NOT IN (master) OR fork = true ) AND type IN (push, api, pull_request)"
- name: publish
  if: "( tag =~ ^v.* OR branch IN (master, develop) ) AND type != pull_request AND fork != true"

jobs:
  include:
  - stage: test
    install: &1
    - pip install -e "git+https://github.com/avirshup/DockerMake#egg=dockermake"
    - pip install -e "git+https://github.com/pyinvoke/invoke#egg=invoke"
    script:
    - docker-make --list
    - docker-make --list | awk '/*/{print $2}'| grep -v '^base\|^common|^layer\|^tini' | xargs -n1 -I% docker-make --no_build % $TAG $CACHE;
  - stage: build
    install: *1
    script:
    - docker-make --list | awk '/*/{print $2}'| grep -v '^base\|^common|^layer\|^tini' | xargs -n1 -I% docker-make %  $TAG $CACHE;
  - stage: publish
    install: *1
    script:
    - test -z "$TRAVIS_TAG" && TAG="--tag ${TRAVIS_BRANCH/master/latest}" || TAG="--tag ${TRAVIS_TAG}"
    - PUSH="--push-to-registry -r docker.io/apealive --registry-user $DOCKER_USER --registry-token $DOCKER_PASS";
    - echo $DOCKER_PASS | docker login --password-stdin -u $DOCKER_USER docker.io/apealive;
    - docker-make --list | awk '/*/{print $2}'| grep -v '^base\|^common|^layer\|^tini' | xargs -n1 -I% docker-make %  $TAG $CACHE $PUSH;

after_failure:
- test -e dockerfile.fail && cat dockerfile.fail || true
after_success:
- docker images

notifications:
  webhooks:
    on_success: change
    on_failure: never
    on_start: never
    on_cancel: never
    on_error: never
  email: true
